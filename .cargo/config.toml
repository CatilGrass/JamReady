[build]
target-dir = "./.shared/target"

[alias]

# Build Custom Target
# Usage:
# LINUX   > t="TARGET" && cargo b "$t" && cargo r "$t"
# WINDOWS > $t="TARGET" ; cargo b $t ; cargo r $t
b = [ "build", "--workspace", "--profile", "release", "--target" ]
r = [ "run", "--manifest-path", "./Cargo.toml", "--profile", "release", "--bin", "export_project" ]

# Dev (default)
# Usage:
# LINUX   > cargo build_dev && cargo dev
# WINDOWS > cargo build_dev ;  cargo dev
build_dev = [ "build", "--workspace", "--profile", "dev" ]
dev = [ "run", "--manifest-path", "./Cargo.toml", "--profile", "dev", "--bin", "export_project", "dev" ]

# Release (default)
# Usage:
# LINUX   > cargo build_release && cargo release
# WINDOWS > cargo build_release ;  cargo release
build_release = [ "build", "--workspace", "--profile", "release" ]
release = [ "run", "--manifest-path", "./Cargo.toml", "--profile", "release", "--bin", "export_project" ]

# Windows
# Usage:
# LINUX   > cargo build_win_msvc && cargo release_win_msvc
# WINDOWS > cargo build_win_msvc ;  cargo release_win_msvc
build_win_msvc = [ "build", "--workspace", "--profile", "release", "--target", "x86_64-pc-windows-msvc" ]
release_win_msvc = [ "run", "--manifest-path", "./Cargo.toml", "--profile", "release", "--bin", "export_project", "x86_64-pc-windows-msvc" ]

# Linux GNU
# Usage:
# LINUX   > cargo build_linux_gnu && cargo release_linux_gnu
# WINDOWS > cargo build_linux_gnu ;  cargo release_linux_gnu
build_linux_gnu = [ "build", "--workspace", "--profile", "release", "--target", "x86_64-unknown-linux-gnu" ]
release_linux_gnu = [ "run", "--manifest-path", "./Cargo.toml", "--profile", "release", "--bin", "export_project", "x86_64-unknown-linux-gnu" ]

# Linux MUSL
# Usage:
# LINUX   > cargo build_linux_musl && cargo release_linux_musl
# WINDOWS > cargo build_linux_musl ;  cargo release_linux_musl
build_linux_musl = [ "build", "--workspace", "--profile", "release", "--target", "x86_64-unknown-linux-musl" ]
release_linux_musl = [ "run", "--manifest-path", "./Cargo.toml", "--profile", "release", "--bin", "export_project", "x86_64-unknown-linux-musl" ]

[env]
# ------ Project Settings ------

# Project version
PROJECT_VERSION = { value = "0.1.3" }

# ----- Server Settings -----

# Default port
DEFAULT_SERVER_PORT = { value = "5011" }

# ------ Path Settings ------

# In the .jam directory,     names should use "lower_snake_case",
# while other directories or files should use " UpperCamelCase ".

# Paths
PATH_WORKSPACE_ROOT = { value = ".jam/" }
PATH_PARAMETERS = { value = ".jam/params/" }
PATH_DATABASE_CONFIG_ARCHIVE = { value = ".jam/.archived/" }
PATH_CACHE = { value = ".jam/.cached/" }
PATH_DATABASE = { value = "Storage/" }

# Files
FILE_DATABASE = { value = ".jam/db_remote.ron" }
FILE_LOCAL_FILE_MAP = { value = ".jam/db_local.ron" }
FILE_LOCAL_FOLDER_MAP = { value = ".jam/.struct_cache.ron" }
FILE_WORKSPACE_SERVER_DATA = { value = ".jam/workspace.ron" }

# ----- Workspace Settings -----

# Workspace recycle bin
WORKSPACE_RECYCLEBIN = { value = "Removed/" }